{"version":3,"sources":["components/PokemonData.js","components/PokemonImage.js","containers/PokemonContainer.js","containers/App.js","serviceWorker.js","index.js"],"names":["PokemonImage","_ref","name","number","primaryType","secondaryType","previousEvolution","nextEvolution","height","weight","react_default","a","createElement","className","href","target","rel","imageUrl","src","alt","PokemonContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","calculatePokemonNumber","pokemonList","initial_date","list","initialDate","numberList","iDate","Date","UTC","year","month","day","cDate","getFullYear","getMonth","getDate","Math","floor","_this2","fetch","then","results","json","data","type","types","slot","setState","_this3","length","evolves_from_species","_this4","_this5","fetchPokemon","getPrevEvolution","getNextEvolution","src_components_PokemonImage","components_PokemonData","Component","App","src_containers_PokemonContainer","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6ffe370.chunk.js","sourcesContent":["import React from 'react';\r\nimport './PokemonData.css';\r\n\r\nconst PokemonImage = ({name, number, primaryType, secondaryType, previousEvolution, nextEvolution, height, weight}) => {\r\n  return(\r\n    <div className=\"data-container\">\r\n      <h2 className=\"p-name\">Pok√©mon of the Day: </h2>\r\n      <span className=\"name-span\">{name}</span>\r\n      <hr />\r\n      <p className=\"data-entry\">Number: <span className=\"data-span\">{number}</span></p>\r\n      <p className=\"data-entry\">Primary type: <span className=\"data-span\">{primaryType}</span></p>\r\n      <p className=\"data-entry\">Secondary type: <span className=\"data-span\">{secondaryType}</span></p>\r\n      <p className=\"data-entry\">Evolves from: <span className=\"data-span\">{previousEvolution}</span></p>\r\n      <p className=\"data-entry\">Evolves into: <span className=\"data-span\">{nextEvolution}</span></p>\r\n      <p className=\"data-entry\">Height: <span className=\"data-span\">{height}</span> m</p>\r\n      <p className=\"data-entry\">Weight: <span className=\"data-span\">{weight}</span> kg</p>\r\n      <hr />\r\n      <p>Source: <a href={\"https://pokeapi.co/api/v2/pokemon/\"+number} target=\"_blank\" rel=\"noopener noreferrer\">https://pokeapi.co/api/v2/pokemon/{number}</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonImage;\r\n","import React from 'react';\r\nimport './PokemonImage.css';\r\n\r\nconst PokemonImage = ({number, name}) => {\r\n  let imageUrl = \"https://pokeres.bastionbot.org/images/pokemon/\"+number+\".png\"\r\n  return(\r\n    <div className=\"p-image-container\">\r\n      <img src={imageUrl} alt={number + \" - \" + name} className=\"p-image\"/>\r\n      <span className=\"source-hover\"><span>Source: {imageUrl}</span></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonImage;\r\n","import React, { Component, } from 'react';\r\nimport PokemonData from '../components/PokemonData';\r\nimport PokemonImage from '../components/PokemonImage';\r\nimport './PokemonContainer.css';\r\nimport './TypeStyling.css'\r\nimport pokemonList from '../pokemonList.json';\r\n\r\n\r\nclass PokemonContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: 'N/A',\r\n      number: this.calculatePokemonNumber(pokemonList.initial_date, pokemonList.list),\r\n      primaryType: 'N/A',\r\n      secondaryType: 'N/A',\r\n      previousEvolution: 'N/A',\r\n      nextEvolution: 'N/A',\r\n      height: 'N/A',\r\n      weight: 'N/A'\r\n    }\r\n  }\r\n\r\n  calculatePokemonNumber(initialDate, numberList) {\r\n    let iDate = new Date(Date.UTC(initialDate.year, initialDate.month-1, initialDate.day));\r\n    let cDate = new Date();\r\n    cDate = new Date(Date.UTC(cDate.getFullYear(), cDate.getMonth(), cDate.getDate()));\r\n    let chosenNumber = numberList[Math.floor((cDate-iDate)/(1000 * 60 * 60 * 24))];\r\n    return (chosenNumber);\r\n  }\r\n\r\n  fetchPokemon(number) {\r\n    let name = 'N/A';\r\n    let primaryType = 'N/A';\r\n    let secondaryType = 'N/A';\r\n    let height = '0';\r\n    let weight = '0';\r\n    return(fetch('https://pokeapi.co/api/v2/pokemon/' + number + '/')\r\n      .then(results => {\r\n        return results.json();\r\n      })\r\n      .then(data => {\r\n        for (let type in data.types) {\r\n          if (data.types[type].slot === 2) {\r\n            secondaryType = data.types[type].type.name;\r\n          } else {\r\n            primaryType = data.types[type].type.name;\r\n          }\r\n        }\r\n        height = data.height/10;\r\n        weight = data.weight/10;\r\n        name = data.name;\r\n        this.setState({name: name, height: height, weight: weight, secondaryType: secondaryType, primaryType: primaryType});\r\n      })\r\n    )\r\n  }\r\n\r\n  getNextEvolution(number) {\r\n    if (number < pokemonList.list.length) {\r\n      fetch('https://pokeapi.co/api/v2/pokemon-species/' + (number+1) + '/')\r\n      .then(results => {\r\n        return results.json();\r\n      })\r\n      .then(data => {\r\n        if (data.evolves_from_species && data.evolves_from_species.name === this.state.name) {\r\n          this.setState({nextEvolution: data.name})\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getPrevEvolution(number) {\r\n    if (number > 1) {\r\n      fetch('https://pokeapi.co/api/v2/pokemon-species/' + (number) + '/')\r\n      .then(results => {\r\n        return results.json();\r\n      })\r\n      .then(data => {\r\n        if (data.evolves_from_species) {\r\n          this.setState({previousEvolution: data.evolves_from_species.name})\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let pData = this.fetchPokemon(this.state.number);\r\n    pData.then(() => {\r\n      this.getPrevEvolution(this.state.number);\r\n      this.getNextEvolution(this.state.number);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className={\"p-container \" + this.state.primaryType + (this.state.secondaryType !== \"N/A\" ? \"-\" + this.state.secondaryType : \"\")}>\r\n        <div className=\"container\">\r\n          <div className=\"row p-aligner\">\r\n            <div className=\"col-md-5\">\r\n              <PokemonImage name={this.state.name} number={this.state.number} />\r\n            </div>\r\n            <div className=\"col-md-6 offset-md-1\">\r\n              <PokemonData\r\n                name={this.state.name}\r\n                number={this.state.number}\r\n                primaryType={this.state.primaryType}\r\n                secondaryType={this.state.secondaryType}\r\n                previousEvolution={this.state.previousEvolution}\r\n                nextEvolution={this.state.nextEvolution}\r\n                height={this.state.height}\r\n                weight={this.state.weight}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonContainer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport PokemonContainer from './PokemonContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <PokemonContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}